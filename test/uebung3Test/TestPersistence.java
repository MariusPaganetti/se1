package uebung3Test;import java.io.ByteArrayOutputStream;import java.io.PrintStream;import org.hbrs.se.ws20.uebung3.Container;import org.hbrs.se.ws20.uebung3.MemberView;import org.junit.jupiter.api.Test;import static org.junit.jupiter.api.Assertions.*;/** * Die Aufgabe 3 wurde gemeinsam mit sbulut2s geloest */public class TestPersistence{   Container con = new Container();   Container.Member mem1 =  con. new Member();   Container.Member mem2 =  con. new Member();   Container.Member mem3 =  con. new Member();   @Test   public void storeTest()   {      MemberView mv = new MemberView();      try      {         con.addMember(mem1);         con.addMember(mem2);         con.addMember(mem3);      }      catch(Container.ContainerException e)      {         e.printStackTrace();      }      con.store();//Test speichern      con.resetArray();      assertEquals(0,con.size());      con.load();//Test laden      assertEquals(3,con.size());      assertEquals(true,con.idExist(0));      assertEquals(true,con.idExist(1));      assertEquals(true,con.idExist(2));      /**Test ueberschreiben eine Datei*/      con.resetArray();      try      {         con.addMember(mem2);      }      catch(Exception e)      {      }      con.store();      con.resetArray();      con.load();      assertEquals(1,con.size());   }   @Test   public void dumpTest()   {      final ByteArrayOutputStream out = new ByteArrayOutputStream();      final ByteArrayOutputStream err = new ByteArrayOutputStream();      final PrintStream originalOut = System.out;      final PrintStream originalErr = System.err;      System.setOut(new PrintStream(out));      System.setErr(new PrintStream(err));      try      {         con.addMember(mem1);      }      catch(Exception e)      {      }      //egt Test      MemberView.dump(con.getCurrentList());      assertEquals("Member (ID = 0 )\n", out.toString());      System.setOut(originalOut);      System.setErr(originalErr);   }}